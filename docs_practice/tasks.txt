1.Կատարել swap գործողություն թվի i և j բիթերը տեղափոխելու համար։

2.Ստուգել թվի 1 արժեքով բիթերի քանակը կենտ է, թե զույգ:

3.Գրել ֆունկցիա, որը ստանում է ամբողջ թիվ (int), այդ թվին գումարում նրա reverse֊ը, քանի դեռ չի ստացել պոլինդրոմ արժեք, և վերադարձնում է քայլերի քանակը, այդ արժեքին հասնելու համար։ օր․՝ 
1) 123 + 321 = 444 ստացանք պոլինդրոմ և վերադարձրինք 1         
2) 555 պոլինդրոմ է, վերադարձրինք 0         
3) 49 + 94 = 143, պոլինդրոմ չէ, հետևաբար 143 + 341 = 484, ստացանք պոլինդրոմ և վերադարձրինք 2։

4.n թվանշան ունեցող բնական թիվը կոչվում է Արմսթրոնգի թիվ, եթե նրա թվանշանների n աստիճանների գումարը հավասար է այդ թվին (օրինակ՝ 153=1^3 +5^3 +3^3 ): Ներմուծել թիվ, արտածել YES եթե այն հանդիսանում է Արմսթրոնգի թիվ, և NO հակառակ դեպքում։

5.Գրեք «findIndex» անունով ֆունկցիա, որն ընդունում է ամբողջ թվերի զանգվածը, զանգվածի չափը և ֆունկցիայի ցուցիչը։ «findIndex» ֆունկցիան պետք է վերադարձնի զանգվածի առաջին տարրի ինդեքսը, որն անցնում է տրամադրված ֆունկցիայի կատարած թեստը։ Եթե ​​նման տարր չի գտնվել, վերադարձրեք -1:
int findIndex(int arr*, int size, int (*testFunc)(int));

6.https://leetcode.com/problems/binary-search/description/
7.https://leetcode.com/problems/valid-anagram/
8.https://leetcode.com/problems/maximum-subarray/
9.https://leetcode.com/problems/add-digits/description/
10.https://leetcode.com/problems/missing-number/description/
11.Selection sort




